Install crio
https://github.com/cri-o/packaging/blob/main/README.md
================================================================

export OS=xUbuntu_22.04
export VERSION=1.25

apt install curl gnupg -y

$ echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /"| sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
$ echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /"|sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list

$ curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | sudo apt-key add -
$ curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key add -

$ sudo apt update

$ sudo apt install cri-o cri-o-runc cri-tools -y

$ sudo systemctl start crio
$ sudo systemctl enable crio
$ sudo systemctl status crio

crictl --version

curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes.gpg

echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/kubernetes.gpg] http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list


sudo apt update

sudo apt install kubeadm kubelet kubectl

sudo apt-mark hold kubeadm kubelet kubectl

kubeadm version
kubectl version

sudo modprobe overlay
sudo modprobe br_netfilter

sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF


sudo sysctl --system


lsmod | grep br_netfilter


=========Till Here execute on all systems becoming part of k8s cluster================
On MAster Only
sudo kubeadm config images pull --cri-socket unix:///var/run/crio/crio.sock

systemctl kubelet status
** take snapshot**

kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket unix:///var/run/crio/crio.sock

{{ Read output carefully and execute command s as mentioned}}


Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.204.161:6443 --token 69o8ye.cpo6s1vqdduw4x9h --discovery-token-ca-cert-hash sha256:2e75ca9074c53c231f71eb797db3759e03fc543b08f88ca1e2bf5869c79a4840 


{{https://kubernetes.io/docs/concepts/cluster-administration/addons


https://docs.tigera.io/calico/latest/getting-started/kubernetes/self-managed-onprem/onpremises

}}



For Adding b4 adding node
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml


On Node(client)
login as root
swapoff -a
kubeadm join 192.168.204.161:6443 --token 69o8ye.cpo6s1vqdduw4x9h --discovery-token-ca-cert-hash sha256:2e75ca9074c53c231f71eb797db3759e03fc543b08f88ca1e2bf5869c79a4840 

===========================================================================================
To get cluster info
kubectl cluster-info

to get complete details about cluster
kubectl cluster-info dump


For practice follow steps from this link
https://kubernetes.io/docs/concepts/workloads/controllers/deployment/

FOR PRACTICE ONLINE LAB AVAILABLE AT 
https://killercoda.com/killer-shell-cka/scenario/playground
sign in with github

Use below link to practice commands
FOR MORE POD management
https://kubernetes.io/docs/tasks/manage-kubernetes-objects/declarative-config/